<?xml version="1.0"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Doug Bell</title>
        <link>http://preaction.github.io/index.html</link>
        <atom:link href="http://preaction.github.io/blog/index.rss" rel="self" type="application/rss+xml" />
        <description>Blog feed of Doug Bell</description>
        <generator>Statocles 0.017</generator>
        <item>
            <title>perlsloc - Count Perl Source Lines with Perl::Tidy</title>
            <link>http://preaction.github.io/blog/2014/06/29/perlsloc-count-perl-source-lines-with-perl-tidy.html</link>
            <guid>http://preaction.github.io/blog/2014/06/29/perlsloc-count-perl-source-lines-with-perl-tidy.html</guid>
            <description><![CDATA[
                <p>While spending some time putting together my own <a href="https://github.com/preaction/dot-files/blob/master/perltidyrc">perltidyrc
file</a>, I became
intimately familiar with the <a href="https://metacpan.org/pod/distribution/Perl-Tidy/bin/perltidy">Perl::Tidy
documentation</a>.</p>

<p>One day, I decided to find out exactly how much code I was maintaining. Since
perltidy can strip comments and POD, and also normalize the source code to make
a fair measurement, it's a perfect tool for counting Source Lines of Code
(SLOC).</p>

<p>Here's a small shell script using <code>ack</code>, <code>perltidy</code>, <code>xargs</code>, and <code>wc</code> to count
the source lines of code in any number of directories.</p>

<pre><code>ack -f --perl $@ | xargs -L 1 perltidy --noprofile --delete-pod --mbl=0 --standard-output | wc -l
</code></pre>

<p><code>ack -f</code> lists the files that would be searched, and <code>--perl</code> searches Perl
files, so we get ack's heuristics for finding Perl files. <code>xargs -L 1</code> invokes
the following command for every 1 line of input. The <code>perltidy</code> command strips
the pod and tightens up the whitespace and writes the result to stdout, which
<code>wc -l</code> will then count, line by line.</p>

<p>So, as an example, the current <a href="http://metacpan.org/release/Statocles">Statocles</a> release
has 50% more test lines than source lines:</p>

<pre><code>» perlsloc lib bin
    1034
» perlsloc t
    1633
</code></pre>

                    <ul>
                        <li><a href="http://blogs.perl.org/users/preaction/2014/06/perlsloc---count-perl-source-lines-with-perltidy.html">
                            Continue reading <em>perlsloc - Count Perl Source Lines with Perl::Tidy</em> on blogs.perl.org...
                        </a></li>
                        <li><a href="http://preaction.github.io/blog/2014/06/29/perlsloc-count-perl-source-lines-with-perl-tidy.html#section-2">
                            Continue reading on Doug Bell
                        </a></li>
                    </ul>
            ]]></description>
            <pubDate>
                Sun, 29 Jun 2014 00:00:00 -0600
            </pubDate>
        </item>
        <item>
            <title>Conflict Resolution: local::lib and git's Perl</title>
            <link>http://preaction.github.io/blog/2014/06/14/conflict-resolution-local--lib-and-gits-perl.html</link>
            <guid>http://preaction.github.io/blog/2014/06/14/conflict-resolution-local--lib-and-gits-perl.html</guid>
            <description><![CDATA[
                <p>I ran into a frustrating problem the other day:</p>

<pre><code>$ git add -i
/usr/bin/perl: symbol lookup error: ~/perl5/lib/perl5/x86_64-linux-thread-multi/auto/List/Util/Util.so:
undefined symbol: Perl_xs_apiversion_bootcheck
fatal: 'add--interactive' appears to be a git command, but we were not
able to execute it. Maybe git-add--interactive is broken?
</code></pre>

                    <ul>
                        <li><a href="http://blogs.perl.org/users/preaction/2014/06/conflict-resolution-locallib-and-gits-perl.html">
                            Continue reading <em>Conflict Resolution: local::lib and git's Perl</em> on blogs.perl.org...
                        </a></li>
                        <li><a href="http://preaction.github.io/blog/2014/06/14/conflict-resolution-local--lib-and-gits-perl.html#section-2">
                            Continue reading on Doug Bell
                        </a></li>
                    </ul>
            ]]></description>
            <pubDate>
                Sat, 14 Jun 2014 00:00:00 -0600
            </pubDate>
        </item>
        <item>
            <title>Chicago.PM New Website! New Meetup URL! New Presentations Project!</title>
            <link>http://preaction.github.io/blog/2013/06/13/chicago.pm-new-website-new-meetup-url-new-presentations-project.html</link>
            <guid>http://preaction.github.io/blog/2013/06/13/chicago.pm-new-website-new-meetup-url-new-presentations-project.html</guid>
            <description><![CDATA[
                <p>Lots of news for the Chicago.PM group! We've got a <a href="http://chicago.pm.org">new Chicago.PM
website</a>, powered by <a href="http://github.com">Github</a>, up at
<a href="http://chicago.pm.org">http://chicago.pm.org</a>. The website is completely
editable via Github using the <a href="http://octopress.org">Octopress</a> system. We hope
to start sharing resources about Perl on our website, increasing the exposure
of the good tutorials and learning sites.</p>

                    <ul>
                        <li><a href="http://blogs.perl.org/users/preaction/2013/06/chicagopm-new-website-new-meetup-url-new-presentations-project.html">
                            Continue reading <em>Chicago.PM New Website! New Meetup URL! New Presentations Project!</em> on blogs.perl.org...
                        </a></li>
                        <li><a href="http://preaction.github.io/blog/2013/06/13/chicago.pm-new-website-new-meetup-url-new-presentations-project.html#section-2">
                            Continue reading on Doug Bell
                        </a></li>
                    </ul>
            ]]></description>
            <pubDate>
                Thu, 13 Jun 2013 00:00:00 -0600
            </pubDate>
        </item>
        <item>
            <title>Chicago.PM - Beyond grep - Expanding the Programmer Toolset</title>
            <link>http://preaction.github.io/blog/2013/05/01/chicago.pm-beyond-grep-expanding-the-programmer-toolset.html</link>
            <guid>http://preaction.github.io/blog/2013/05/01/chicago.pm-beyond-grep-expanding-the-programmer-toolset.html</guid>
            <description><![CDATA[
                <p>Last week, <a href="http://petdance.com">Andy Lester</a> (author of <a href="http://petdance.com/book/">Land the Tech Job You
Love</a>) came to talk about tools to help programmers
work more efficiently and the 2.0 release of his <a href="http://beyondgrep.com">Ack search
tool</a>.</p>

                    <ul>
                        <li><a href="http://blogs.perl.org/users/preaction/2013/05/chicagopm---beyond-grep---expanding-the-programmer-toolset.html">
                            Continue reading <em>Chicago.PM - Beyond grep - Expanding the Programmer Toolset</em> on blogs.perl.org...
                        </a></li>
                        <li><a href="http://preaction.github.io/blog/2013/05/01/chicago.pm-beyond-grep-expanding-the-programmer-toolset.html#section-2">
                            Continue reading on Doug Bell
                        </a></li>
                    </ul>
            ]]></description>
            <pubDate>
                Wed, 01 May 2013 00:00:00 -0600
            </pubDate>
        </item>
        <item>
            <title>I Bless You in the Name of the Stringified Object</title>
            <link>http://preaction.github.io/blog/2013/04/15/i-bless-you-in-the-name-of-the-stringified-object.html</link>
            <guid>http://preaction.github.io/blog/2013/04/15/i-bless-you-in-the-name-of-the-stringified-object.html</guid>
            <description><![CDATA[
                <p>A co-worker came to me today with a curious error message:</p>

<pre><code>use DateTime;
my $date = DateTime-&gt;new( year =&gt; 2013, month =&gt; 4, day =&gt; 15 );
$date-&gt;set_time_zone("Australia/Sydney");
print $date-&gt;today;'
</code></pre>

<p>This code gives the error <code>Can't locate object method "_normalize_nanoseconds"
via package "2013-04-15T00:00:00" at
/usr2/local/perlbrew/perls/perl-5.16.3/lib/site_perl/5.16.3/x86_64-linux-thread-multi/DateTime.pm
line 252.</code></p>

<p>The package "2013-04-15T00:00:00" is the curious part: It looks like a
stringified DateTime, but who could possibly be stringifying a DateTime object
and then using that as a package name?</p>

                    <ul>
                        <li><a href="http://blogs.perl.org/users/preaction/2013/04/i-bless-you-in-the-name-of-the-stringified-object.html">
                            Continue reading <em>I Bless You in the Name of the Stringified Object</em> on blogs.perl.org...
                        </a></li>
                        <li><a href="http://preaction.github.io/blog/2013/04/15/i-bless-you-in-the-name-of-the-stringified-object.html#section-2">
                            Continue reading on Doug Bell
                        </a></li>
                    </ul>
            ]]></description>
            <pubDate>
                Mon, 15 Apr 2013 00:00:00 -0600
            </pubDate>
        </item>
    </channel>
</rss>

